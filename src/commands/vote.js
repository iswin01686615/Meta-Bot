const { SlashCommandBuilder, PermissionFlagsBits } = require("discord.js");

module.exports = {
    data: new SlashCommandBuilder()
        .setName("vote")
        .setDescription("Vote ƒë·ªÉ skip b√†i h√°t hi·ªán t·∫°i"),

    async execute(interaction, player) {
        const queue = player.get(interaction.guild.id);

        if (!queue || !queue.currentTrack) {
            return interaction.reply({ content: "‚ùå Kh√¥ng c√≥ b√†i n√†o ƒëang ph√°t", ephemeral: true });
        }

        const voteMsg = await interaction.reply({
            content: "üó≥ | B·ªè phi·∫øu **b·ªè qua b√†i h√°t n√†y**? (üëç = ƒê·ªìng √Ω, üëé = Kh√¥ng ƒë·ªìng √Ω)",
            fetchReply: true,
        });

        await voteMsg.react("üëç");
        await voteMsg.react("üëé");

        const filter = (reaction, user) =>
            ["üëç", "üëé"].includes(reaction.emoji.name) && !user.bot;

        const collector = voteMsg.createReactionCollector({ filter, time: 15000 });

        const userVotes = new Set();
        let votes = { up: 0, down: 0 };

        collector.on("collect", (reaction, user) => {
            if (userVotes.has(user.id)) return;
            userVotes.add(user.id);

            if (reaction.emoji.name === "üëç") votes.up++;
            else if (reaction.emoji.name === "üëé") votes.down++;
        });

        collector.on("end", async () => {
            let resultMsg = `üìä | K·∫øt qu·∫£ vote: üëç ${votes.up} | üëé ${votes.down}\n`;

            if (votes.up > votes.down) {
                try {
                    await queue.skip();
                    resultMsg += "‚úÖ ƒêa s·ªë ƒë·ªìng √Ω. ƒê√£ b·ªè qua b√†i h√°t.";
                } catch (err) {
                    console.error(err);
                    resultMsg += "‚ö†Ô∏è G·∫∑p l·ªói khi b·ªè qua b√†i h√°t.";
                }
            } else {
                resultMsg += "‚ùå ƒêa s·ªë kh√¥ng ƒë·ªìng √Ω. Ti·∫øp t·ª•c ph√°t b√†i h√°t.";
            }

            interaction.followUp({ content: resultMsg });
        });
    },
};
